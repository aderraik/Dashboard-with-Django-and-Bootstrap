AZ_APPNAME := via-internet-dashboard
AZ_APPGROUP := rg_rg_Linux_westeurope
AZ_LOCATION := westeurope

AZ_DBNAME := via-internet-dashboard
AZ_DBHOST := $(AZ_DBNAME).postgres.database.azure.com

AZ_DBUSER_NAME := manager@via-internet-dashboard
AZ_DBUSER_PASS := pAssw8rd

AZ_DBADMIN_NAME := viainternet_admin
AZ_DBADMIN_PASS := pAssw8rd

AZ_DEPLOY_USR := viainternet_deploy
AZ_DEPLOY_PWD := pAssw8rd

LOCAL_IP := 37.25.64.220

PREFIX_PKG := dashboard

VERSION_BOOTSTRAP := 4.4.1

default:
	grep -E ':\s+#' Makefile

run:                            # run django app
	. setenv_local && python manage.py runserver

az_run:                         # run django app on azure
	. setenv_azure && python manage.py runserver

az_webapp-create:               # create azure web app in app services
	az webapp up --sku F1       --name $(AZ_APPNAME)                                                \
	                            --resource-group $(AZ_APPGROUP)                                     \
	                            --location $(AZ_LOCATION)

az_webapp-deploy:               # depoy changes to app services
	az webapp up --sku F1       --name $(AZ_APPNAME)                                                \
	                            --location $(AZ_LOCATION)


az_webapp-config-environment:   # configure webapp environment
	az webapp config appsettings set                                                                \
	                            --name           $(AZ_APPNAME)                                      \
	                            --resource-group $(AZ_APPGROUP)                                     \
	                            --settings  DBHOST="$(AZ_DBNAME).postgres.database.azure.com"       \
	                                        DBUSER="$(AZ_DBUSER_NAME)"                              \
	                                        DBPASS="$(AZ_DBUSER_PASS)"                              \
	                                        DBNAME="$(AZ_DBNAME)"


az_init-console-log:            # init access to console logs
	az webapp log config    --name  $(AZ_APPNAME)                                   \
	                        --resource-group $(AZ_APPGROUP)                         \
	                        --docker-container-logging filesystem

az_show-console-log:            # show console log
	az webapp log tail      --name  $(AZ_APPNAME) --resource-group $(AZ_APPGROUP)


az_postgres-create:             # create azure postgress database
	az postgres server create   --resource-group $(AZ_APPGROUP)                                 \
	                            --name           $(AZ_DBNAME)                                   \
	                            --admin-user     $(AZ_DBADMIN_NAME)                             \
	                            --admin-password $(AZ_DBADMIN_PASS)                             \
	                            --auto-grow      Disabled                                       \
	                            --location       $(AZ_LOCATION)                                 \
	                            --sku-name       B_Gen5_1

az_postgres-firewall:           # create firewall rules
	az postgres server firewall-rule create                                                     \
	                            --resource-group $(AZ_APPGROUP)                                 \
	                            --server-name    $(AZ_DBNAME)                                   \
	                            --start-ip-address=$(LOCAL_IP)                                  \
	                            --end-ip-address=$(LOCAL_IP)                                    \
	                            --name AllowAllAzureIPs

az_deploy-create-user:
	az webapp deployment user set --user-name $(AZ_DEPLOY_USR) --password $(AZ_DEPLOY_PWD)

az_deploy-create-serviceplan:
	az appservice plan create --name viainternet-serviceplan --resource-group $(AZ_APPGROUP) --sku F1 --is-linux


az_help-list-locations:         # list locations
	az account list-locations 


clearcache:	# Clear Cache
	python3 manage.py clearcache

deploy:		# Deploy
	rm -rf dist $(PREFIX_PKG)*
	rm -rf polls.dist
	cd polls && python3 setup.py sdist
	mkdir polls.dist && mv polls/dist/* polls/$(PREFIX_PKG)* polls.dist

jquery_install:		# Install jQuery Library
	cd .. && yarn add jquery
	rm -rf polls/static/jquery
	mkdir  polls/static/jquery
	cp ../node_modules/jquery/dist/* polls/static/jquery

bootstrap_install:	# Install Bootstrap Library
	cd .. && yarn add bootstrap
	rm -rf  polls/static/bootstrap
	mkdir   polls/static/bootstrap
	cp -R ../node_modules/bootstrap/dist/* polls/static/bootstrap

bootstrap_download:	# Install Bootstrap from Source
	mkdir -p install/bootstrap
	rm -rf polls/static/vendor/bootstrap/bootstrap-$(VERSION_BOOTSTRAP)-dist
	wget -q https://github.com/twbs/bootstrap/releases/download/v$(VERSION_BOOTSTRAP)/bootstrap-$(VERSION_BOOTSTRAP)-dist.zip -O install/bootstrap/$(VERSION_BOOTSTRAP).zip && \
	unzip install/bootstrap/$(VERSION_BOOTSTRAP).zip -d polls/static/vendor/bootstrap/
	mv polls/static/vendor/bootstrap/bootstrap-$(VERSION_BOOTSTRAP)-dist polls/static/vendor/bootstrap/$(VERSION_BOOTSTRAP)

postgres-start:			        # start postgresql database server
	pg_ctl -D /usr/local/var/postgres start

postgres-stop:			        # stop postgresql database server
	pg_ctl -D /usr/local/var/postgres stop

postgres-psql:
	psql                        -h $(AZ_DBNAME).postgres.database.azure.com         \
	                            -U $(AZ_DBADMIN_NAME)@$(AZ_DBNAME) postgres
